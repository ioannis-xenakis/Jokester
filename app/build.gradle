plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.john_xenakis.jokester"
        minSdk 21
        targetSdk 33
        versionCode 5
        versionName "1.0.0-beta2"

        testInstrumentationRunner "com.john_xenakis.jokester.CustomTestRunner"
    }

    buildFeatures {
        compose true
    }

    buildTypes {
        debug {
            buildConfigField("Integer", "PORT", "8080")
            buildConfigField("String", "APP_VERSION_DATE", '"15/9/2023"')
        }
        release {
            buildConfigField("String", "APP_VERSION_DATE", '"15/9/2023"')

            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            // Includes the default ProGuard rules files that are packaged with
            // the Android Gradle plugin.
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    namespace 'john_xenakis.jokester'

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
        }
    }

    allprojects {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:deprecation"
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'

    //Fixing error: "No static method forceEnableAppTracing()V
    //in class Landroidx/tracing/Trace; or its super classes
    //(declaration of 'androidx.tracing.Trace' appears in ...)
    implementation 'androidx.tracing:tracing-ktx:1.1.0'

    implementation 'androidx.compose.ui:ui:1.5.0-alpha04'
    implementation 'androidx.compose.ui:ui-graphics:1.5.0-alpha04'
    // Navigation Compose
    implementation 'androidx.navigation:navigation-compose:2.5.3'
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.7.1'
    // Compose Material Design 3
    implementation 'androidx.compose.material3:material3:1.2.0-alpha01'
    // Animations
    implementation 'androidx.compose.animation:animation:1.5.0-alpha04'
    // Tooling support (Previews, etc.)
    implementation 'androidx.compose.ui:ui-tooling:1.5.0-alpha04'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // Accompanist for accessing status bar and system ui
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.31.2-alpha'
    // Retrofit2 for using APIs
    def retrofitVersion = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    def okhttpVersion = "5.0.0-alpha.11"
    // Http logging interceptor for logging api calls and such in logcat
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
    // Okhttp3 needed for MockWebServer testing
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation 'com.squareup.okio:okio:3.2.0'
    // Dagger-Hilt for dependency injection
    implementation 'com.google.dagger:hilt-android:2.46.1'
    kapt 'com.google.dagger:hilt-compiler:2.46.1'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    // Accompanist for pager
    implementation 'com.google.accompanist:accompanist-pager:0.25.1'
    // Timber for printing log messages
    implementation 'com.jakewharton.timber:timber:5.0.1'
    def moshiVersion = '1.15.0'
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    implementation("com.squareup.moshi:moshi:$moshiVersion")
    ksp("com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion")

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'io.mockk:mockk:1.13.5'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:5.0.0-alpha.11'
    androidTestImplementation 'androidx.test.ext:junit:1.2.0-alpha01'
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4:1.5.0-alpha04'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.46.1'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.46.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.5.0-alpha04'
}